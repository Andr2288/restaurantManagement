// setup.js
// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É

require('dotenv').config();

const fs = require('fs');
const path = require('path');
const mysql = require('mysql2/promise');

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
const config = {
    host: process.env.DB_HOST || 'localhost',
    user: process.env.DB_USER || 'root',
    password: process.env.DB_PASSWORD || '',
    multipleStatements: true,
    charset: 'utf8mb4'
};

async function setupDatabase() {
    let connection;

    try {
        console.log('üè™ –ü–æ—á–∏–Ω–∞—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É...');

        // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MySQL
        connection = await mysql.createConnection(config);
        console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MySQL');

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏
        console.log('üèóÔ∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...');
        const schemaScript = fs.readFileSync('./database.schema.sql', 'utf8');
        await connection.query(schemaScript);
        console.log('‚úÖ –°—Ö–µ–º–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞');

        // –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
        console.log('üìã –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö...');
        const dataScript = fs.readFileSync('./fictitious_data.sql', 'utf8');
        await connection.query(dataScript);
        console.log('‚úÖ –î–∞–Ω—ñ –¥–æ–¥–∞–Ω—ñ');

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—å
        const [tables] = await connection.query('SHOW TABLES FROM restaurant_management_db');
        console.log('\nüìä –°—Ç–≤–æ—Ä–µ–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ:');
        tables.forEach(table => {
            console.log(`   - ${Object.values(table)[0]}`);
        });

        console.log('\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –≥–æ—Ç–æ–≤–∞ –¥–æ —Ä–æ–±–æ—Ç–∏!');

    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
    } finally {
        if (connection) {
            await connection.end();
        }
    }
}

setupDatabase();